# Generated by Django 5.2.6 on 2025-09-30 04:23

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('cpf', models.CharField(blank=True, max_length=11, null=True)),
                ('telefone', models.CharField(max_length=15)),
                ('data_nascimento', models.DateField(blank=True, null=True)),
                ('sexo', models.CharField(choices=[('M', 'Masculino'), ('F', 'Feminino'), ('O', 'Outros')], max_length=1)),
                ('estado_civil', models.CharField(choices=[('S', 'Solteiro (a)'), ('C', 'Casado (a)'), ('D', 'Divorciado (a)'), ('V', 'Viúvo (a)')], max_length=1)),
                ('endereco', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Turno',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Ex: Manhã, Tarde, Plantão Noturno', max_length=50, unique=True)),
                ('hora_inicio', models.TimeField()),
                ('hora_fim', models.TimeField()),
            ],
            options={
                'verbose_name': 'Turno',
                'verbose_name_plural': 'Turnos',
                'ordering': ['hora_inicio'],
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('cpf', models.CharField(blank=True, max_length=11, null=True, unique=True)),
                ('telefone', models.CharField(max_length=15)),
                ('data_nascimento', models.DateField(blank=True, null=True)),
                ('sexo', models.CharField(choices=[('M', 'Masculino'), ('F', 'Feminino'), ('O', 'Outros')], max_length=1)),
                ('endereco', models.TextField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Animal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('especie', models.CharField(choices=[('C', 'Cachorro'), ('G', 'Gato'), ('O', 'Outros')], max_length=1)),
                ('raca', models.CharField(max_length=100)),
                ('data_nascimento', models.DateField(blank=True, null=True)),
                ('peso', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('sexo', models.CharField(choices=[('M', 'Macho'), ('F', 'Fêmea')], max_length=1)),
                ('observacoes', models.TextField(blank=True)),
                ('dono', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='animais', to='core.cliente')),
            ],
        ),
        migrations.CreateModel(
            name='Consulta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateTimeField(blank=True, null=True)),
                ('motivo', models.TextField()),
                ('observacoes', models.TextField(blank=True)),
                ('animal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.animal')),
                ('veterinario', models.ForeignKey(limit_choices_to={'groups__name': 'Veterinarios'}, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HorarioTrabalho',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dia_semana', models.IntegerField(choices=[(0, 'Segunda-feira'), (1, 'Terça-feira'), (2, 'Quarta-feira'), (3, 'Quinta-feira'), (4, 'Sexta-feira'), (5, 'Sábado'), (6, 'Domingo')])),
                ('veterinario', models.ForeignKey(limit_choices_to={'groups__name': 'Veterinarios'}, on_delete=django.db.models.deletion.CASCADE, related_name='horarios_trabalho', to=settings.AUTH_USER_MODEL)),
                ('turno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.turno')),
            ],
            options={
                'verbose_name': 'Horário de Trabalho',
                'verbose_name_plural': 'Horários de Trabalho',
                'ordering': ['veterinario', 'dia_semana', 'turno__hora_inicio'],
                'unique_together': {('veterinario', 'dia_semana', 'turno')},
            },
        ),
    ]
